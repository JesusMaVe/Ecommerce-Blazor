@page "/login"
@layout Layout.MainLayout
@using Microsoft.AspNetCore.Identity
@using Ecommerce.App.Models
@using Ecommerce.App.ViewModels
@inject SignInManager<ApplicationUser> SignInManager
@inject NavigationManager Navigation

<PageTitle>Iniciar Sesión - CreatorMarket</PageTitle>

<div class="min-h-screen bg-[#F2F2F2] bg-[radial-gradient(circle_at_1px_1px,rgba(13,13,13,0.15)_1px,transparent_0)] bg-[length:20px_20px] flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
        <div class="text-center">
            <div class="w-16 h-16 bg-[#0D0D0D] rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-lg">
                <svg class="w-8 h-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
            </div>
            <h2 class="text-3xl font-bold text-[#0D0D0D] mb-2">
                Iniciar Sesión
            </h2>
            <p class="text-[#737373]">
                Accede a tu cuenta para continuar
            </p>
        </div>
        
        <div class="bg-white/90 backdrop-blur-sm py-8 px-6 shadow-2xl rounded-3xl border border-[#BFBFBF]/30">
            <EditForm Model="Input" OnValidSubmit="LoginAsync" FormName="LoginForm" class="space-y-6">
                <DataAnnotationsValidator />
                
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="bg-red-50 border border-red-200 rounded-2xl p-4 shadow-sm">
                        <div class="flex">
                            <svg class="h-5 w-5 text-red-400 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            <p class="ml-3 text-sm text-red-800">@errorMessage</p>
                        </div>
                    </div>
                }
                
                <div>
                    <label for="email" class="block text-sm font-semibold text-[#0D0D0D] mb-2">
                        Correo electrónico
                    </label>
                    <InputText @bind-Value="Input.Email" id="email" type="email"
                              class="appearance-none block w-full px-4 py-3 border border-[#BFBFBF] rounded-2xl placeholder-[#737373] focus:outline-none focus:ring-2 focus:ring-[#0D0D0D] focus:border-transparent bg-white/70 backdrop-blur-sm shadow-sm transition-all duration-200"
                              placeholder="tu@email.com" />
                    <ValidationMessage For="@(() => Input.Email)" class="text-red-600 text-sm mt-1" />
                </div>
                
                <div>
                    <label for="password" class="block text-sm font-semibold text-[#0D0D0D] mb-2">
                        Contraseña
                    </label>
                    <InputText @bind-Value="Input.Password" id="password" type="password"
                              class="appearance-none block w-full px-4 py-3 border border-[#BFBFBF] rounded-2xl placeholder-[#737373] focus:outline-none focus:ring-2 focus:ring-[#0D0D0D] focus:border-transparent bg-white/70 backdrop-blur-sm shadow-sm transition-all duration-200"
                              placeholder="Tu contraseña" />
                    <ValidationMessage For="@(() => Input.Password)" class="text-red-600 text-sm mt-1" />
                </div>
                
                <div class="flex items-center justify-between">
                    <div class="flex items-center">
                        <InputCheckbox @bind-Value="Input.RememberMe" id="remember-me"
                                      class="h-4 w-4 text-[#0D0D0D] focus:ring-[#0D0D0D] border-[#BFBFBF] rounded transition-colors" />
                        <label for="remember-me" class="ml-2 block text-sm text-[#595959] font-medium">
                            Recordarme
                        </label>
                    </div>
                    <div class="text-sm">
                        <a href="/forgot-password" class="font-medium text-[#0D0D0D] hover:text-[#595959] transition-colors">
                            ¿Olvidaste tu contraseña?
                        </a>
                    </div>
                </div>
                
                <div class="pt-4">
                    <button type="submit"
                           class="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-semibold rounded-2xl text-white bg-[#0D0D0D] hover:bg-[#595959] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#0D0D0D] transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1">
                        <span>Iniciar Sesión</span>
                    </button>
                </div>
            </EditForm>
            
            <div class="mt-6">
                <div class="relative">
                    <div class="relative flex justify-center text-sm">
                        <span class="px-4 bg-white/90 text-[#737373] font-medium">¿No tienes cuenta?</span>
                    </div>
                </div>
                
                <div class="mt-6">
                    <a href="/register" class="w-full flex justify-center py-3 px-4 border border-[#BFBFBF] rounded-2xl shadow-lg text-sm font-semibold text-[#0D0D0D] bg-white/70 hover:bg-white/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#0D0D0D] transition-all duration-300 hover:shadow-xl transform hover:-translate-y-1">
                        Crear nueva cuenta
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string errorMessage = string.Empty;

    [SupplyParameterFromForm]
    private LoginViewModel Input { get; set; } = new();

    private async Task LoginAsync()
    {
        var result = await SignInManager.PasswordSignInAsync(
            Input.Email, Input.Password, Input.RememberMe, false);

        if (result.Succeeded)
        {
            Navigation.NavigateTo("/", forceLoad: true);
        }
        else
        {
            errorMessage = "Email o contraseña incorrectos.";
        }
    }
}